// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projet6_ModelisezEtcreezUneBaseDeDonnee.Data;

#nullable disable

namespace Projet6_ModelisezEtcreezUneBaseDeDonnee.Migrations
{
    [DbContext(typeof(NexaWorksContext))]
    [Migration("20250523_ChangeVersionNameToString")]
    partial class ChangeVersionNameToString
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OsModeleVersionModele", b =>
                {
                    b.Property<int>("SupportedOsOsId")
                        .HasColumnType("int");

                    b.Property<int>("SupportedVersionsVersionId")
                        .HasColumnType("int");

                    b.HasKey("SupportedOsOsId", "SupportedVersionsVersionId");

                    b.HasIndex("SupportedVersionsVersionId");

                    b.ToTable("VersionOsSupport", (string)null);
                });

            modelBuilder.Entity("Projet6_ModelisezEtcreezUneBaseDeDonnee.Models.OsModele", b =>
                {
                    b.Property<int>("OsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OsId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OsId");

                    b.ToTable("Os");
                });

            modelBuilder.Entity("Projet6_ModelisezEtcreezUneBaseDeDonnee.Models.ProductModele", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Projet6_ModelisezEtcreezUneBaseDeDonnee.Models.TicketModele", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateResolution")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OsId")
                        .HasColumnType("int");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("VersionId")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("DateCreation")
                        .HasDatabaseName("IX_Ticket_DateCreation");

                    b.HasIndex("OsId")
                        .HasDatabaseName("IX_Ticket_OsId");

                    b.HasIndex("Statut")
                        .HasDatabaseName("IX_Ticket_Statut");

                    b.HasIndex("VersionId")
                        .HasDatabaseName("IX_Ticket_VersionId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Projet6_ModelisezEtcreezUneBaseDeDonnee.Models.VersionModele", b =>
                {
                    b.Property<int>("VersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VersionId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("VersionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("VersionId");

                    b.HasIndex("ProductId", "VersionName")
                        .IsUnique()
                        .HasDatabaseName("IX_Version_ProductId_VersionName");

                    b.ToTable("Versions");
                });

            modelBuilder.Entity("OsModeleVersionModele", b =>
                {
                    b.HasOne("Projet6_ModelisezEtcreezUneBaseDeDonnee.Models.OsModele", null)
                        .WithMany()
                        .HasForeignKey("SupportedOsOsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projet6_ModelisezEtcreezUneBaseDeDonnee.Models.VersionModele", null)
                        .WithMany()
                        .HasForeignKey("SupportedVersionsVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Projet6_ModelisezEtcreezUneBaseDeDonnee.Models.TicketModele", b =>
                {
                    b.HasOne("Projet6_ModelisezEtcreezUneBaseDeDonnee.Models.OsModele", "Os")
                        .WithMany("Tickets")
                        .HasForeignKey("OsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Projet6_ModelisezEtcreezUneBaseDeDonnee.Models.VersionModele", "Version")
                        .WithMany("Tickets")
                        .HasForeignKey("VersionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Os");

                    b.Navigation("Version");
                });

            modelBuilder.Entity("Projet6_ModelisezEtcreezUneBaseDeDonnee.Models.VersionModele", b =>
                {
                    b.HasOne("Projet6_ModelisezEtcreezUneBaseDeDonnee.Models.ProductModele", "Product")
                        .WithMany("Versions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Projet6_ModelisezEtcreezUneBaseDeDonnee.Models.OsModele", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Projet6_ModelisezEtcreezUneBaseDeDonnee.Models.ProductModele", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("Projet6_ModelisezEtcreezUneBaseDeDonnee.Models.VersionModele", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
